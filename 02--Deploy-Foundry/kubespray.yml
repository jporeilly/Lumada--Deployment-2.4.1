---
# Download Kubespray 2.20.0 - Kubernetes 1.24.6
- name: Download Kubespray
  hosts: "{{ groups['installer'][0] }}"
  become: false
  gather_facts: true
  vars:
    kubespray_home: ~/Packages
    release: kubespray-release-2.20
    version: release-2.20
    ansible_playbooks: /etc/ansible/playbooks
  
  tasks:
    # Check Nodes
    - name: Ping Nodes
      ping:
      tags: 
       - info

    # Update packages
    - name: Update apt repo and cache on "{{ groups['installer'][0] }}" node
      become: true
      apt:
       update_cache: yes
       force_apt_get: yes
       cache_valid_time: 3600
      tags: 
       - install

    # Check for previous Kubespray
    - name: Check if kubespray is available
      stat:
        path: "{{ kubespray_home }}/{{ release }}"
      register: kubespray
      tags: 
       - info
       - install

    - debug: 
        msg: "Kubspray Exists: {{ kubespray.stat.exists }}"
      tags: 
       - info      
  
    # Downloads kubespray into Packages directory
    - name: Get Kubespray if required
      get_url:
        url: 'https://github.com/kubernetes-sigs/kubespray/archive/refs/heads/{{ version }}.zip'
        dest: "{{ kubespray_home }}/{{ release }}.zip"
      when: kubespray.stat.exists == false
      tags: 
       - install
 
    # Extracts kubespray into Packages directory
    - name: Unarchive Kubespray-{{ version }}
      unarchive:
        src: "{{ kubespray_home }}/{{ release }}.zip"
        dest: "{{ kubespray_home }}"
      when: kubespray.stat.exists == false
      tags: 
       - install
    
    # Check Kubespray has unarchived
    - name: Re-Check if Kubespray has extracted
      stat:
        path: "{{ kubespray_home }}/{{ release }}"
      tags: 
       - install

    - debug: 
        msg: "Kubspray Exists: {{ release }}"
      tags: 
       - install

    # Copy over extra-vars.yml  
    - name: Copy extra-vars.yml
      copy:
        src: "{{ ansible_playbooks }}/extra-vars.yml" 
        dest: "{{ kubespray_home }}/{{ release }}/extra-vars.yml"
      tags: 
       - install

    # Copy over hosts-skytap.yml
    - name: Copy hosts-skytap.yml
      copy:
        src: "{{ ansible_playbooks }}/hosts-skytap.yml"
        dest: "{{ kubespray_home }}/{{ release }}/hosts-skytap.yml"
      tags:
       - install

    - debug: 
        msg: "Config files copied over: {{ release }}"
      tags: 
       - install

    # Display cluster.yml playbook  
    - debug:
        msg:
          - "kubespray is available in {{ kubespray_home }}/{{ release }}"
          - "cd {{ kubespray_home }}/{{ release }}"
          - "ansible-playbook -b -v -i hosts-skytap.yml --extra-vars='@extra-vars.yml' cluster.yml"
      when: kubespray.stat.exists == false
      tags: 
       - info
       - install
    
    - debug:
        msg:
          - "kubespray download and unpack failed!"
      when: kubespray.stat.exists == true
      tags: 
       - info
       - install

    # Check for reboot
    - name: Check if a reboot is needed on all servers
      register: reboot_required_file
      stat:
        path: /var/run/reboot-required
        get_md5: no 

    # Reboot
    - name: Reboot the server if kernel updated
      reboot:
        msg: "Reboot initiated by Ansible for kernel updates"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
      when: reboot_required_file.stat.exists        